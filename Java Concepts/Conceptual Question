import java.util.*;
import java.util.Scanner;
public class GoodBasicQuestions{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str = "aaa";
		String reverse = new StringBuilder(str).reverse().toString();
		System.out.print(str+"------"+reverse);	
		System.out.print(str.equals(reverse)); // checking if they are palindrome
	}
// valid palindrome -- 2 pointer approach
	public boolean isPalindrome(String s){
		int lo=0, hi=s.length()-1;
		while(lo<hi){  // condition becomes invalid after they cross each other

			while(lo<hi && !isValid(s.charAt(lo)))  { lo += 1; }

			while(lo<hi && !isValid(s.charAt(hi)))   { hi -= 1; }


			if (lo<hi) {
				if (isCharDiff(s.charAt(lo), s.charAt(hi))) {
					return false;
				}
			}
			lo+=1; hi-=1;
		}
		return true;
	}

	private boolean isValid(char ch)
	{
		return Character.isLetterOrDigit(ch);
	}
	private boolean isCharDiff(char ch1, char ch2){
		return Character.toLowerCase(ch1) != Character.toLowerCase(ch2);
	}

	// Valid Palindrom - II

	// Valid pointer - II
	public boolean validPalindrome(String s){
		int n=s.length();
		for (int i=0; i<n/2; ++i) {
			int left=i,right=n-i-1;
			if (s.charAt(left) != s.charAt(right)) {
				//case 1: delete char at left
				if (validSubPalindrome(s,left+1,right)) return true;
				return validSubPalindrome(s,left,right-1);
			}
		}
		return true;
	}

	private boolean validSubPalindrome(String s, int lo, int hi){
		int n=hi-lo+1;
		for (int i=0; i<n/2; ++i) {
			int left = lo+i, right=hi-i;
			if (s.charAt(left) != s.charAr(right)) {
				return false;
			}
		}
		return true;
	}

	public void reverseWords(char[] s) {
		
	}
}
